name: publish-linux

# TODO: change to either only run on release branch or on tags/releases
on:
  push:
    branches:
      - publish-action

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: gcr.io/tfx-oss-public/manylinux2014-bazel:bazel-5.3.0
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build package
        run: |
          version="${{ matrix.python-version }}"
          versionstr=${version//./}
          PYTHON_VERSION=$versionstr ./tools/build_manylinux.sh

      - name: Save package for following jobs
        uses: actions/upload-artifact@v3
        with:
          name: dists-linux-${{ matrix.python-version }}
          path: dist

  test-install-linux:
    needs: [build-linux]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dists-linux-${{ matrix.python-version }}
          path: dist

      - name: Install from wheel
        run: |
          version="${{ matrix.python-version }}"
          versionstr=${version//./}
          pip install dist/*cp$versionstr*.whl

      - name: Test installation
        run: python tools/check_install.py

  publish-linux:
    needs: [test-install-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Download builds for all Python versions
        uses: actions/download-artifact@v3
        with:
          # Skipping name: key to download all artifacts from this workflow
          # Artifacts are are downloaded to dist/<artifact-name>
          path: dist

      - name: Move wheels and sources to dist/
        run: |
          mv dist/*/*.whl dist/
          mv -f dist/*/*.tar.gz dist/

      - name: Publish to PyPI
        # TODO: change to prod PyPI, and prod token in repo's secrets
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_TOKEN }}
          poetry publish -r test-pypi -n
