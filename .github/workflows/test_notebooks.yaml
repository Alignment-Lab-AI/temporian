name: test_notebooks

on: [pull_request]

jobs:
  run_notebooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bazel cache
        id: bazel-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-${{ matrix.python-version }}-bazel-cache-${{ hashFiles('**/BUILD', '.bazelrc', '.bazelversion', 'WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-bazel-cache-

      - name: Notebooks cache
        id: notebooks-cache
        uses: actions/cache@v3
        with:
          path: ./docs/src/tutorials/tmp
          key: ${{ runner.os }}-notebooks-${{ hashFiles('**/*.ipynb') }}
          restore-keys: |
            ${{ runner.os }}-notebooks-

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
          cache-dependency-path: |
            poetry.lock
            ./docs/src/tutorials/requirements.txt


      - name: Install poetry dependencies
        run: poetry install --no-interaction

      - name: Install notebook dependencies
        run: pip install -r ./docs/src/tutorials/requirements.txt

      - name: Execute all notebooks
        run: poetry run ./tools/run_notebooks.sh `ls docs/src/*.ipynb`" "`ls docs/src/tutorials/*.ipynb`
